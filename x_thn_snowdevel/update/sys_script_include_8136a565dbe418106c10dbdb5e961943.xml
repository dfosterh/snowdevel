<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_thn_snowdevel.SnowDevelAJAX</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>SnowDevelAJAX</name>
        <script><![CDATA[var SnowDevelAJAX = Class.create();
SnowDevelAJAX.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    getCollisionsByUpdateSet: function() {
        try {
			var updateSetId = this.getParameter('sysparm_updateSetId');
			
            var x = new GlideRecord('sys_update_xml');
            x.addQuery('update_set', updateSetId);
			x.addQuery('update_set.name', '!=', 'default');
            x.addQuery('update_set.state', '!=', 'ignore');
            x.query();

			var returnVal = {};
			returnVal.metrics = [];
            returnVal.issues = [];
            returnVal.conflicts = [];
            
			while (x.next()) {
                var collision = new GlideRecord('sys_update_xml');
				collision.addQuery('update_set.name', '!=', 'default');
                collision.addQuery('update_set.state', '!=', 'ignore');
				collision.addNullQuery('update_set.release_date');
				collision.addQuery('update_set', '!=', updateSetId);
                collision.addQuery('name', x.name);
                collision.query();

				returnVal.metrics.push('Found ' + collision.getRowCount() + ' matches for ' + x.target_name);
				
                while (collision.next()) {
					var issue = {};
					issue.sys_id = collision.sys_id.toString();
					issue.name = collision.target_name.toString();
					issue.updateSetId = collision.update_set.sys_id.toString();
					issue.updateSet = collision.update_set.name.toString();

					if (collision.sys_updated_on > x.sys_updated_on) {
                        returnVal.conflicts.push(issue);
                    } else {
                        returnVal.issues.push(issue);
                    }
                }
            }

			return JSON.stringify(returnVal);
        }
		catch (ex) {
			gs.error('' + ex.message);
        }
    },

	type: 'SnowDevelAJAX'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-03 02:59:46</sys_created_on>
        <sys_id>8136a565dbe418106c10dbdb5e961943</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>SnowDevelAJAX</sys_name>
        <sys_package display_value="SnowDevel" source="x_thn_snowdevel">e2b2ada1dbe418106c10dbdb5e96197e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SnowDevel">e2b2ada1dbe418106c10dbdb5e96197e</sys_scope>
        <sys_update_name>sys_script_include_8136a565dbe418106c10dbdb5e961943</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-04 23:56:21</sys_updated_on>
    </sys_script_include>
</record_update>
